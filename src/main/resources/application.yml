spring:
  rabbitmq:
    publisher-confirms: true #开启生成者确认， P -> Exchange
    publisher-returns: true #开启失败通知，Exchange -> Queue
    listener:
      direct:
        acknowledge-mode: manual #消费者手动确认
        prefetch: 100 #消费者预取大小
      type: direct
    template:
      mandatory: true #失败通知  // 触发setReturnCallback回调必须设置mandatory=true, 否则Exchange没有找到Queue就会丢弃掉消息, 而不会触发回调
    cache:
      channel:
        size: 2 # 通道数量
        checkout-timeout: 30000  #如果加上检查后，size必须要大于1，否则发送消息就是会报No available channels，因为创建消费者后，channel不会关闭，permits = this.checkoutPermits.get(connection); 至少会被消耗一个
      connection:
        mode: channel #缓存channel 连接只会有一个
    host: 127.0.0.1
    port: 5672
    username: root
    password: test1234
    connection-timeout: 3000

server:
  port: 8081


druid:
  db1:
    filters: stat,wall #合并sql
    url: jdbc:mysql://127.0.0.1:3306/test
    username: root
    password: test1234
    driver-class-name: com.mysql.jdbc.Driver
    initialSize: 0 #初始建立物理连接的数量
    minIdle: 5 #最小连接数
    maxActive: 20 #最大连接数
    maxWait: 30000 #获取连接最大等待时间
    poolPreparedStatements: false #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
    maxPoolPreparedStatementPerConnectionSize: -1 #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    validationQuery: select 'x' #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
    validationQueryTimeout: 3 #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
    testOnBorrow: true #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    testOnReturn: false #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    testWhileIdle: true #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    keepAlive: false #连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
  db2:
    filters: stat,wall #合并sql
    url: jdbc:mysql://127.0.0.1:3306/test2
    username: root
    password: test1234
    driver-class-name: com.mysql.jdbc.Driver
    initialSize: 0 #初始建立物理连接的数量
    minIdle: 5 #最小连接数
    maxActive: 20 #最大连接数
    maxWait: 30000 #获取连接最大等待时间
    poolPreparedStatements: false #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
    maxPoolPreparedStatementPerConnectionSize: -1 #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    validationQuery: select 'x' #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
    validationQueryTimeout: 3 #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
    testOnBorrow: true #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    testOnReturn: false #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    testWhileIdle: true #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    keepAlive: false #连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。